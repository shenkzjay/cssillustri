---
import { Image } from "astro:assets";
import Music from "../components/arts/music.astro";
import Layout from "../layouts/Layout.astro";
import SubZero from "../components/arts/subzero.astro";
---

<Layout title="home">
  <section class="bg-wrapper">
    <section class="title-wrap">
      <div class="title-head">
        <div class="header-txt">
          <h1>CSS</h1>
          <h1>CREATIONS</h1>
          <p>Unlocking the fun part of CSS!!!</p>
          <div class="link-buttons">
            <div class="btn">
              <button>
                <a href="https://www.csscanvas.com" aria-label="website link">
                  <p class="btntext1">View css arts</p>
                  <p class="btntext2">View css arts</p>
                </a>
              </button>
            </div>
            <button>View other projects</button>
          </div>
        </div>
        <div class="musicart">
          <div>
            <Music />
          </div>

          <!-- <div>
            <SubZero />
          </div> -->
        </div>
      </div>
    </section>

    <style>
      .musicart {
        position: relative;

        overflow: hidden;
        transform: scale(-1, 1);
      }

      .title-wrap {
        position: relative;
      }

      .header-txt {
        width: 50%;
        margin-left: 100px;
      }

      .title-head {
        /* transform: translate(-50%, -100%); */
        width: 100vw;
        height: 100vh;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        mix-blend-mode: multiply;
      }

      .link-buttons {
        display: flex;
        gap: 20px;
        margin-top: 2rem;
      }

      .link-buttons .btn {
        display: flex;
        flex-flow: column;
      }

      .link-buttons .btn > button {
        padding: 16px 18px;
        border-radius: 9999px;
        outline: none;
        border: none;
        font-weight: 700;
        font-size: 18px;
        width: 100%;
        cursor: pointer;
      }

      .link-buttons .btn > button:hover a p:nth-child(1) {
        transform: translateY(-100px);
        text-wrap: nowrap;
        transition: transform 1s ease-in-out;
      }

      .link-buttons .btn > button:hover a p:nth-child(2) {
        transform: translateY(0px);
        text-wrap: nowrap;
        transition: transform 0.3s ease-in-out;
      }

      .link-buttons .btn > button a {
        position: relative;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        color: white;
        text-decoration: none;
      }

      .link-buttons .btn > button a p:nth-child(1) {
        transform: translateY(0px);
        position: absolute;
        z-index: 1;
        top: 0;
        left: 0;
        transition: transform 0.3s ease-in-out;
        font-weight: 600;
      }

      .link-buttons .btn > button a p:nth-child(2) {
        transform: translateY(100%);
        transition: transform 0.3s ease-in-out;
      }

      .link-buttons > button {
        padding: 16px 18px;
        border-radius: 9999px;
        outline: none;
        border: none;
        font-weight: 700;
        font-size: 18px;
      }

      .link-buttons button:nth-child(1) {
        background-color: black;
        color: white;
      }

      .title-head h1 {
        font-size: clamp(2.5rem, 7vw, 5rem);
        margin:;
        color: black;
        background-clip: text;
        background-color: rgba(255, 255, 255, 0.8);

        text-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      }

      .bg-wrapper {
        width: 100vw;
        height: 100vh;
        display: grid;
        grid-template-columns: repeat(12, calc(100vw / 12));
        grid-template-rows: repeat(6, calc(100vw / 12));
        background-size: calc(100vw / 12) calc(100vw / 12);
        /* background-image: linear-gradient(white, white); */
        background-image: linear-gradient(to right, #f8f8f8 1px, transparent 1px),
          linear-gradient(to bottom, #f4f4f4 1px, transparent 1px);
        z-index: -1;
      }

      @media screen and (max-width: 800px) {
        .title-head {
          /* transform: translate(-50%, -100%); */

          display: flex;
          flex-direction: column;
          height: 100vh;
          justify-content: center;
          align-items: center;
        }

        .header-txt {
          width: 100%;
          margin-left: 0px;
          display: flex;
          flex-direction: column;
        }

        .link-buttons .btn {
          display: flex;
          flex-flow: column;
        }

        .link-buttons {
          display: flex;
          flex-direction: column;

          gap: 20px;

          margin: 2rem;
        }
        .link-buttons .btn > button {
          display: flex;
          justify-content: center;
          align-items: center;
        }

        .title-head h1,
        .title-head p {
          display: flex;
          justify-content: center;
        }
      }
    </style>

    <script>
      const gridContainer = document.querySelector(".bg-wrapper");

      for (let i = 0; i <= 144; i++) {
        const gridItem = document.createElement("div");
        gridItem.classList.add("gridItem");

        gridContainer?.appendChild(gridItem);
      }

      function addRandomBoxShadow(numOfItems: number) {
        const items = document.querySelectorAll(".gridItem");

        const totalItems = items.length;

        numOfItems = Math.min(numOfItems, totalItems);

        const randomIndices: Set<number> = new Set();

        while (randomIndices.size < numOfItems) {
          const randomIndex = Math.floor(Math.random() * totalItems);
          randomIndices.add(randomIndex);
        }

        for (let index of randomIndices) {
          items[index].classList.add("shadow");
          items[index].setAttribute("style", "  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08)");
        }
      }

      addRandomBoxShadow(50);
    </script>
  </section></Layout
>
